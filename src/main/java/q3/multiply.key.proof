\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Jun 03 18:18:40 BRT 2018
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , reach-reach\\:on , moreSeqRules-moreSeqRules\\:on , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:treatAsAxiom , assertions-assertions\\:safe , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\programVariables {
  int n, m, res;
}

\functions {
  int n0;
  int m0;
}

\problem {
   n = n0 & m = m0
-> \<{
       res=0;
         if (n<0) {
         n=-n;
         m=-m;
       }
       else  {}
             while ( n>0 ) {
         res=res+m;
         n=n-1;
       }
     }\> (res = mul(n0, m0) & n = Z(0(#)))

}

\proof {
(keyLog "0" (keyUser "vitor" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "47")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "3") (term "0,0"))
(rule "eqSymm" (formula "2"))
(rule "eqSymm" (formula "1"))
(rule "assignment" (formula "3"))
(rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "3") (term "1"))
(builtin "One Step Simplification" (formula "3"))
(rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,1,0"))
(rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "3") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,1,0"))
(rule "mul_literals" (formula "3") (term "1,0,0,1,0"))
(rule "ifElseSplit" (formula "3"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "unaryMinusInt" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "translateJavaUnaryMinusInt" (formula "4") (term "0,1,0"))
   (rule "polySimp_elimNeg" (formula "4") (term "0,1,0"))
   (rule "unaryMinusInt" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "translateJavaUnaryMinusInt" (formula "4") (term "0,1,0"))
   (rule "polySimp_elimNeg" (formula "4") (term "0,1,0"))
   (rule "blockEmpty" (formula "4") (term "1"))
   (opengoal "   n = n0 & m = m0 -> \\<{        res=0;          if (n<0) {          n=-n;          m=-m;        }        else  {}              while ( n>0 ) {          res=res+m;          n=n-1;        }      }\\> (res = mul(n0, m0) & n = Z(0(#))) ")
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "inEqSimp_leqRight" (formula "3"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (rule "blockEmpty" (formula "4") (term "1"))
   (rule "blockEmpty" (formula "4") (term "1"))
   (opengoal "   n = n0 & m = m0 -> \\<{        res=0;          if (n<0) {          n=-n;          m=-m;        }        else  {}              while ( n>0 ) {          res=res+m;          n=n-1;        }      }\\> (res = mul(n0, m0) & n = Z(0(#))) ")
)
)

}
